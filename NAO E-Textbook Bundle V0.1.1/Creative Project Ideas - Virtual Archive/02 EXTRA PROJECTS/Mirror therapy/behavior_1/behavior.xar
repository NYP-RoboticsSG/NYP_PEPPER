<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="Individual Movements" id="8" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="328" y="141">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Lift arm" id="1" localization="8" tooltip="" x="100" y="49">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="210">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="365" y="25">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="80" y="21">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Jetzt den Arm hoch und runter, von rechts nach links bewegen.")]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <text>
                                      <![CDATA[Jetzt den Arm hoch und runter, von rechts nach links bewegen.]]>
                                    </text>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="30" value="1.31597" />
                              <Key frame="210" value="0.788627" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="30" value="-1.67234" />
                              <Key frame="210" value="-0.529749" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="30" value="-54.2268" />
                              <Key frame="60" value="-42.0098" />
                              <Key frame="90" value="-26.5409" />
                              <Key frame="120" value="-19.0701" />
                              <Key frame="150" value="-24.871" />
                              <Key frame="180" value="-26.5409" />
                              <Key frame="210" value="-54.842" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="30" value="-77.1713" />
                              <Key frame="60" value="-77.6108" />
                              <Key frame="90" value="-77.1713" />
                              <Key frame="120" value="-78.0503" />
                              <Key frame="150" value="-33.2255" />
                              <Key frame="180" value="-77.1713" />
                              <Key frame="210" value="-76.2924" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="30" value="0.5164" />
                              <Key frame="60" value="0.468" />
                              <Key frame="90" value="0.4556" />
                              <Key frame="120" value="0.4472" />
                              <Key frame="150" value="0.4472" />
                              <Key frame="180" value="0.4556" />
                              <Key frame="210" value="0.4812" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="30" value="82.7037" />
                              <Key frame="60" value="-20.2175" />
                              <Key frame="90" value="24.4315" />
                              <Key frame="120" value="25.9256" />
                              <Key frame="150" value="9.48991" />
                              <Key frame="180" value="24.4315" />
                              <Key frame="210" value="81.649" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="30" value="12.1267" />
                              <Key frame="60" value="3.60116" />
                              <Key frame="90" value="5.62267" />
                              <Key frame="120" value="48.5138" />
                              <Key frame="150" value="-12.5709" />
                              <Key frame="180" value="5.62267" />
                              <Key frame="210" value="13.3571" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="30" value="-1.32078" />
                              <Key frame="60" value="-3.25439" />
                              <Key frame="90" value="-4.22121" />
                              <Key frame="120" value="-5.97904" />
                              <Key frame="150" value="-51.7706" />
                              <Key frame="180" value="-4.22121" />
                              <Key frame="210" value="-0.178186" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="30" value="52.298" />
                              <Key frame="60" value="53.2648" />
                              <Key frame="90" value="52.9132" />
                              <Key frame="120" value="52.4738" />
                              <Key frame="150" value="52.4738" />
                              <Key frame="180" value="52.9132" />
                              <Key frame="210" value="53.6164" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="30" value="76.2876" />
                              <Key frame="60" value="77.2544" />
                              <Key frame="90" value="76.6392" />
                              <Key frame="120" value="76.6392" />
                              <Key frame="150" value="76.6392" />
                              <Key frame="180" value="76.6392" />
                              <Key frame="210" value="77.2544" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="30" value="0.2868" />
                              <Key frame="60" value="0.28" />
                              <Key frame="90" value="0.28" />
                              <Key frame="120" value="0.28" />
                              <Key frame="150" value="0.28" />
                              <Key frame="180" value="0.28" />
                              <Key frame="210" value="0.28" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="30" value="85.0816" />
                              <Key frame="60" value="85.9605" />
                              <Key frame="90" value="86.6637" />
                              <Key frame="120" value="86.4" />
                              <Key frame="150" value="86.4" />
                              <Key frame="180" value="86.6637" />
                              <Key frame="210" value="84.4664" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="30" value="-11.6041" />
                              <Key frame="60" value="-12.3951" />
                              <Key frame="90" value="-11.7799" />
                              <Key frame="120" value="-11.0768" />
                              <Key frame="150" value="-11.0768" />
                              <Key frame="180" value="-11.7799" />
                              <Key frame="210" value="-12.7467" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="30" value="2.0191" />
                              <Key frame="60" value="-0.266077" />
                              <Key frame="90" value="2.1949" />
                              <Key frame="120" value="2.1949" />
                              <Key frame="150" value="2.1949" />
                              <Key frame="180" value="2.1949" />
                              <Key frame="210" value="-0.266077" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Horizontal eight" id="6" localization="8" tooltip="" x="356" y="91">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="270">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="353" y="46">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="68" y="42">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Jetzt eine liegende Acht.")]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <text>
                                      <![CDATA[Jetzt eine liegende Acht.]]>
                                    </text>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="30" value="1.31597" />
                              <Key frame="55" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="30" value="-1.67234" />
                              <Key frame="55" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="30" value="-54.2268" />
                              <Key frame="55" value="-57.8135" />
                              <Key frame="85" value="-57.8135" />
                              <Key frame="120" value="-57.8135" />
                              <Key frame="160" value="-57.8135" />
                              <Key frame="195" value="-57.8135" />
                              <Key frame="240" value="-57.8135" />
                              <Key frame="270" value="-57.8135" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="30" value="-77.1713" />
                              <Key frame="55" value="-79.5961" />
                              <Key frame="85" value="-79.5961" />
                              <Key frame="120" value="-79.5961" />
                              <Key frame="160" value="-79.5961" />
                              <Key frame="195" value="-79.5961" />
                              <Key frame="240" value="-79.5961" />
                              <Key frame="270" value="-79.5961" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="30" value="82.7037" />
                              <Key frame="55" value="49.1093" />
                              <Key frame="85" value="28.8497" />
                              <Key frame="120" value="54.09" />
                              <Key frame="160" value="69.4369" />
                              <Key frame="195" value="46.8514" />
                              <Key frame="240" value="24.7031" />
                              <Key frame="270" value="78.0381" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="30" value="12.1267" />
                              <Key frame="55" value="41.3358" />
                              <Key frame="85" value="21.9579" />
                              <Key frame="120" value="6.61886" />
                              <Key frame="160" value="2.39157" />
                              <Key frame="195" value="-12.8868" />
                              <Key frame="240" value="1.68642" />
                              <Key frame="270" value="11.6887" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="30" value="52.298" />
                              <Key frame="55" value="57.8135" />
                              <Key frame="85" value="57.8135" />
                              <Key frame="120" value="57.8135" />
                              <Key frame="160" value="57.8135" />
                              <Key frame="195" value="57.8135" />
                              <Key frame="240" value="57.8135" />
                              <Key frame="270" value="57.8135" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="30" value="76.2876" />
                              <Key frame="55" value="79.5961" />
                              <Key frame="85" value="79.5961" />
                              <Key frame="120" value="79.5961" />
                              <Key frame="160" value="79.5961" />
                              <Key frame="195" value="79.5961" />
                              <Key frame="240" value="79.5961" />
                              <Key frame="270" value="79.5961" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="30" value="85.0816" />
                              <Key frame="55" value="80.2575" />
                              <Key frame="85" value="80.2575" />
                              <Key frame="120" value="80.2575" />
                              <Key frame="160" value="80.2575" />
                              <Key frame="195" value="80.2575" />
                              <Key frame="240" value="80.2575" />
                              <Key frame="270" value="80.2575" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="30" value="-11.6041" />
                              <Key frame="55" value="-16.7161" />
                              <Key frame="85" value="-16.7161" />
                              <Key frame="120" value="-16.7161" />
                              <Key frame="160" value="-16.7161" />
                              <Key frame="195" value="-16.7161" />
                              <Key frame="240" value="-16.7161" />
                              <Key frame="270" value="-16.7161" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="30" value="0.5164" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="30" value="-1.32078" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="30" value="0.2868" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="30" value="2.0191" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Circle" id="7" localization="8" tooltip="" x="226" y="47">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="150">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="347" y="39">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="62" y="35">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Den Arm in einer Kreisform bewegen.")]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <text>
                                      <![CDATA[Den Arm in einer Kreisform bewegen.]]>
                                    </text>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="1.31597" />
                              <Key frame="40" value="-0.441859" />
                              <Key frame="150" value="1.31597" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.67234" />
                              <Key frame="40" value="-0.705531" />
                              <Key frame="150" value="-1.67234" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-54.2268" />
                              <Key frame="40" value="-52.6447" />
                              <Key frame="55" value="-55.1936" />
                              <Key frame="75" value="-32.5175" />
                              <Key frame="90" value="-34.8027" />
                              <Key frame="105" value="-33.5722" />
                              <Key frame="120" value="-30.0566" />
                              <Key frame="135" value="-25.5741" />
                              <Key frame="150" value="-54.2268" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.1713" />
                              <Key frame="40" value="-77.6108" />
                              <Key frame="55" value="-77.6108" />
                              <Key frame="75" value="-66.5365" />
                              <Key frame="90" value="-66.5365" />
                              <Key frame="105" value="-66.5365" />
                              <Key frame="120" value="-66.5365" />
                              <Key frame="135" value="-67.679" />
                              <Key frame="150" value="-77.1713" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.5164" />
                              <Key frame="40" value="0.5" />
                              <Key frame="55" value="0.5" />
                              <Key frame="75" value="0.5" />
                              <Key frame="90" value="0.5" />
                              <Key frame="105" value="0.5" />
                              <Key frame="120" value="0.5" />
                              <Key frame="135" value="0.4876" />
                              <Key frame="150" value="0.5164" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="82.7037" />
                              <Key frame="40" value="66.7074" />
                              <Key frame="55" value="38.2305" />
                              <Key frame="75" value="-24.7879" />
                              <Key frame="90" value="-24.4363" />
                              <Key frame="105" value="-11.1647" />
                              <Key frame="120" value="18.2791" />
                              <Key frame="135" value="49.3049" />
                              <Key frame="150" value="82.7037" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="12.1267" />
                              <Key frame="40" value="39.1094" />
                              <Key frame="55" value="66.0922" />
                              <Key frame="75" value="29.3534" />
                              <Key frame="90" value="-0.266077" />
                              <Key frame="105" value="-17.405" />
                              <Key frame="120" value="-18.6354" />
                              <Key frame="135" value="-11.3404" />
                              <Key frame="150" value="12.1267" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.32078" />
                              <Key frame="40" value="-3.34228" />
                              <Key frame="55" value="-3.34228" />
                              <Key frame="75" value="-5.53958" />
                              <Key frame="90" value="-8.96736" />
                              <Key frame="105" value="-10.9889" />
                              <Key frame="120" value="-10.9889" />
                              <Key frame="135" value="-9.6705" />
                              <Key frame="150" value="-1.32078" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="52.298" />
                              <Key frame="40" value="51.8585" />
                              <Key frame="55" value="51.8585" />
                              <Key frame="75" value="51.8585" />
                              <Key frame="90" value="51.8585" />
                              <Key frame="105" value="50.2765" />
                              <Key frame="120" value="50.2765" />
                              <Key frame="135" value="48.6065" />
                              <Key frame="150" value="52.298" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="76.2876" />
                              <Key frame="40" value="76.6392" />
                              <Key frame="55" value="76.6392" />
                              <Key frame="75" value="76.6392" />
                              <Key frame="90" value="76.6392" />
                              <Key frame="105" value="77.7818" />
                              <Key frame="120" value="77.7818" />
                              <Key frame="135" value="76.9029" />
                              <Key frame="150" value="76.2876" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.2868" />
                              <Key frame="40" value="0.2856" />
                              <Key frame="55" value="0.2856" />
                              <Key frame="75" value="0.2856" />
                              <Key frame="90" value="0.2856" />
                              <Key frame="105" value="0.2856" />
                              <Key frame="120" value="0.2856" />
                              <Key frame="135" value="0.302" />
                              <Key frame="150" value="0.2868" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.0816" />
                              <Key frame="40" value="85.3453" />
                              <Key frame="55" value="85.3453" />
                              <Key frame="75" value="85.3453" />
                              <Key frame="90" value="85.3453" />
                              <Key frame="105" value="86.1363" />
                              <Key frame="120" value="86.1363" />
                              <Key frame="135" value="87.7183" />
                              <Key frame="150" value="85.0816" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-11.6041" />
                              <Key frame="40" value="-11.0768" />
                              <Key frame="55" value="-11.0768" />
                              <Key frame="75" value="-11.0768" />
                              <Key frame="90" value="-11.0768" />
                              <Key frame="105" value="-10.0221" />
                              <Key frame="120" value="-10.0221" />
                              <Key frame="135" value="-9.31893" />
                              <Key frame="150" value="-11.6041" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="2.0191" />
                              <Key frame="40" value="3.77694" />
                              <Key frame="55" value="3.77694" />
                              <Key frame="75" value="3.77694" />
                              <Key frame="90" value="3.77694" />
                              <Key frame="105" value="3.77694" />
                              <Key frame="120" value="3.77694" />
                              <Key frame="135" value="6.4137" />
                              <Key frame="150" value="2.0191" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Back and forth" id="8" localization="8" tooltip="" x="228" y="151">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="125">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="354" y="50">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="69" y="46">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Den Arm von Seite zur Seite hin und her bewegen.")]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <text>
                                      <![CDATA[Den Arm von Seite zur Seite hin und her bewegen.]]>
                                    </text>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="1.31597" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.67234" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-54.2268" />
                              <Key frame="75" value="-46.756" />
                              <Key frame="125" value="-48.6896" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.1713" />
                              <Key frame="75" value="-104.154" />
                              <Key frame="125" value="-64.0755" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.5164" />
                              <Key frame="75" value="0.5028" />
                              <Key frame="125" value="0.5028" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="82.7037" />
                              <Key frame="75" value="51.4143" />
                              <Key frame="125" value="48.2502" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="12.1267" />
                              <Key frame="75" value="55.0178" />
                              <Key frame="125" value="-17.2292" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.32078" />
                              <Key frame="75" value="-4.74855" />
                              <Key frame="125" value="-4.74855" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="52.298" />
                              <Key frame="75" value="51.5948" />
                              <Key frame="125" value="51.5948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="76.2876" />
                              <Key frame="75" value="76.9908" />
                              <Key frame="125" value="76.9908" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.2868" />
                              <Key frame="75" value="0.2764" />
                              <Key frame="125" value="0.2764" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.0816" />
                              <Key frame="75" value="85.521" />
                              <Key frame="125" value="85.521" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-11.6041" />
                              <Key frame="75" value="-10.9889" />
                              <Key frame="125" value="-10.9889" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="2.0191" />
                              <Key frame="75" value="2.72224" />
                              <Key frame="125" value="2.72224" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Turn hand" id="9" localization="8" tooltip="" x="100" y="151">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="175">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="351" y="37">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="66" y="33">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Die Hand drehen, oben, unten, oben, unten.")]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <text>
                                      <![CDATA[Die Hand drehen, oben, unten, oben, unten.]]>
                                    </text>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="1.31597" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.67234" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-54.2268" />
                              <Key frame="50" value="-0.788627" />
                              <Key frame="75" value="-1.14019" />
                              <Key frame="100" value="-0.788627" />
                              <Key frame="125" value="-1.14019" />
                              <Key frame="150" value="-0.788627" />
                              <Key frame="175" value="-1.14019" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.1713" />
                              <Key frame="50" value="-66.8001" />
                              <Key frame="75" value="-67.7669" />
                              <Key frame="100" value="-66.8001" />
                              <Key frame="125" value="-67.7669" />
                              <Key frame="150" value="-66.8001" />
                              <Key frame="175" value="-67.7669" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.5164" />
                              <Key frame="50" value="0.5092" />
                              <Key frame="75" value="0.5068" />
                              <Key frame="100" value="0.5092" />
                              <Key frame="125" value="0.5068" />
                              <Key frame="150" value="0.5092" />
                              <Key frame="175" value="0.5068" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="82.7037" />
                              <Key frame="50" value="5.97423" />
                              <Key frame="75" value="6.06212" />
                              <Key frame="100" value="5.97423" />
                              <Key frame="125" value="6.06212" />
                              <Key frame="150" value="5.97423" />
                              <Key frame="175" value="6.06212" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="12.1267" />
                              <Key frame="50" value="-1.23289" />
                              <Key frame="75" value="-1.05711" />
                              <Key frame="100" value="-1.23289" />
                              <Key frame="125" value="-1.05711" />
                              <Key frame="150" value="-1.23289" />
                              <Key frame="175" value="-1.05711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.32078" />
                              <Key frame="50" value="69.3442" />
                              <Key frame="75" value="-105.912" />
                              <Key frame="100" value="69.3442" />
                              <Key frame="125" value="-105.912" />
                              <Key frame="150" value="69.3442" />
                              <Key frame="175" value="-105.912" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="52.298" />
                              <Key frame="50" value="50.7159" />
                              <Key frame="75" value="50.2765" />
                              <Key frame="100" value="50.7159" />
                              <Key frame="125" value="50.2765" />
                              <Key frame="150" value="50.7159" />
                              <Key frame="175" value="50.2765" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="76.2876" />
                              <Key frame="50" value="77.0786" />
                              <Key frame="75" value="77.0786" />
                              <Key frame="100" value="77.0786" />
                              <Key frame="125" value="77.0786" />
                              <Key frame="150" value="77.0786" />
                              <Key frame="175" value="77.0786" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.2868" />
                              <Key frame="50" value="0.2908" />
                              <Key frame="75" value="0.2908" />
                              <Key frame="100" value="0.2908" />
                              <Key frame="125" value="0.2908" />
                              <Key frame="150" value="0.2908" />
                              <Key frame="175" value="0.2908" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.0816" />
                              <Key frame="50" value="86.6637" />
                              <Key frame="75" value="87.3668" />
                              <Key frame="100" value="86.6637" />
                              <Key frame="125" value="87.3668" />
                              <Key frame="150" value="86.6637" />
                              <Key frame="175" value="87.3668" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-11.6041" />
                              <Key frame="50" value="-10.7252" />
                              <Key frame="75" value="-10.11" />
                              <Key frame="100" value="-10.7252" />
                              <Key frame="125" value="-10.11" />
                              <Key frame="150" value="-10.7252" />
                              <Key frame="175" value="-10.11" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="2.0191" />
                              <Key frame="50" value="3.77694" />
                              <Key frame="75" value="3.77694" />
                              <Key frame="100" value="3.77694" />
                              <Key frame="125" value="3.77694" />
                              <Key frame="150" value="3.77694" />
                              <Key frame="175" value="3.77694" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Setup" id="4" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="66" y="19">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Autonomous Abilities" id="1" localization="8" tooltip="Autonomous Abilities exists to keep the robot alive at all times. But this box allows you to disable all or parts of the Autonomous Abilities (Autonomous Blinking, Background Movement, Basic Awareness, Listening Movement, Speaking Movement)." x="160" y="272">
                        <bitmap>media/images/box/auto-abilities.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.autonomouslife = self.session().service("ALAutonomousLife")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.enableAnAbility("AutonomousBlinking")
        self.enableAnAbility("BackgroundMovement")
        self.enableAnAbility("BasicAwareness")
        self.enableAnAbility("ListeningMovement")
        self.enableAnAbility("SpeakingMovement")
        self.onDone() # activate output of the box

    def enableAnAbility(self, name):
        self.autonomouslife.setAutonomousAbilityEnabled(name, self.getParameter(name))]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="AutonomousBlinking" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables the robot to make its eye leds blink when it sees someone and when it is interacting." id="4" />
                        <Parameter name="BackgroundMovement" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Defines which slight movements the robot does autonomously when its limbs are not moving." id="5" />
                        <Parameter name="BasicAwareness" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Allow to make the robot establish and keep eye contact with people." id="6" />
                        <Parameter name="ListeningMovement" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Enables some slight movements showing that the robot is listening." id="7" />
                        <Parameter name="SpeakingMovement" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Enables to start autonomously movements during the speech of the robot." id="8" />
                      </Box>
                      <Box name="Stand Up" id="2" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="140" y="22">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Set Language" id="3" localization="8" tooltip="Set the language of your robot for the current application. Your robot will speak and understand the selected language as long as your application has focus. Any following call to ALSpeechRecognition (Speech Reco. box for instance), ALTextToSpeech (Say box for instance) or ALDialog will use this language.&#x0A;" plugin="setlanguage_plugin" x="148" y="126">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
# -*- coding: utf-8 -*-
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.setTTS = True
        self.setASR = True
        self.setDialog = True
        self.language = "English"

    def getService(self, serviceName, humainName):
        service = None
        try:
            service = self.session().service(serviceName)
        except:
            self.logger.warn("%s is not available, language setting cannot be applied to %s." % (serviceName, humainName))
        return service

    def onLoad(self):
        if self.setTTS:
            self.tts = self.getService("ALTextToSpeech", "speech")
        if self.setASR:
            self.asr = self.getService("ALSpeechRecognition", "recognition")
        if self.setDialog:
            self.dialog = self.getService("ALDialog", "dialog")

    def setLanguage(self, service, serviceName):
        try:
            if service is None:
                return False
            service.setLanguage(self.language)
            return True
        except Exception as e:
            self.logger.error("Could not set language %s for %s: %s" % (self.language, serviceName, e))
            return False

    def onInput_onSet(self):
        res = True
        if self.setTTS:
            res = self.setLanguage(self.tts, "ALTextToSpeech") and res
        if self.setASR:
            res = self.setLanguage(self.asr, "ALSpeechRecognition") and res
        if self.setDialog:
            res = self.setLanguage(self.dialog, "ALDialog") and res

        if res:
            self.onReady()
        else:
            self.logger.error("Language %s could not be set for one or more services." % self.language)
            self.onError()]]>
                          </content>
                        </script>
                        <pluginContent>
                          <language>English</language>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" />
                        <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" />
                        <Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Ball into hand" id="2" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="196" y="23">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="55" size="55">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="Warten" index="49">
                    <Diagram>
                      <Box name="Stop" id="1" localization="8" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="111" y="19">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onStop(self):
        self.getParentTimeline().pause()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                      </Box>
                      <Box name="Tactile Head" id="2" localization="8" tooltip="Detect touch on head tactile sensor." x="115" y="129">
                        <bitmap>media/images/box/sensors/tactileHead.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                        <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                        <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" />
                        <Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" />
                        <Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" />
                        <Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                                <Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Head-sequence" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="8" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="9" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="10" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="24" value="1.31597" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="24" value="-1.67234" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="24" value="-54.2268" />
                    <Key frame="49" value="-53.7873" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="24" value="-77.1713" />
                    <Key frame="49" value="-86.6637" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="24" value="0.5164" />
                    <Key frame="49" value="0.5008" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="24" value="82.7037" />
                    <Key frame="49" value="50.8869" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="24" value="12.1267" />
                    <Key frame="49" value="11.5993" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="24" value="-1.32078" />
                    <Key frame="49" value="-100.199" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="24" value="52.298" />
                    <Key frame="49" value="50.628" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="24" value="76.2876" />
                    <Key frame="49" value="74.9692" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="24" value="0.2868" />
                    <Key frame="49" value="0.302" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="24" value="85.0816" />
                    <Key frame="49" value="86.0484" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="24" value="-11.6041" />
                    <Key frame="49" value="-10.2857" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="24" value="2.0191" />
                    <Key frame="49" value="4.83163" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Ball out of hand" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="463" y="25">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="55" size="55">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="Warten" index="49">
                    <Diagram>
                      <Box name="Stop" id="1" localization="8" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="111" y="19">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onStop(self):
        self.getParentTimeline().pause()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                      </Box>
                      <Box name="Tactile Head" id="2" localization="8" tooltip="Detect touch on head tactile sensor." x="119" y="123">
                        <bitmap>media/images/box/sensors/tactileHead.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                        <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                        <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" />
                        <Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" />
                        <Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" />
                        <Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                                <Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Head-sequence" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Hands" id="3" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="114" y="230">
                        <bitmap>media/images/box/movement/move_arm.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = self.session().service( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            motionOps = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    motionOps.append( self.motion.openHand(hand, _async=True) )
                else:
                    motionOps.append( self.motion.closeHand(hand, _async=True) )
            for motionOp in motionOps:
                motionOp.wait()
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Left" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Open the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                          <Choice value="Open the hand" />
                          <Choice value="Close the hand" />
                        </Parameter>
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="8" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="9" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="10" />
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="24" value="1.31597" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="24" value="-1.67234" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="24" value="-54.2268" />
                    <Key frame="49" value="-53.7873" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="24" value="-77.1713" />
                    <Key frame="49" value="-86.6637" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="24" value="0.5164" />
                    <Key frame="49" value="0.5008" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="24" value="82.7037" />
                    <Key frame="49" value="50.8869" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="24" value="12.1267" />
                    <Key frame="49" value="11.5993" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="24" value="-1.32078" />
                    <Key frame="49" value="-100.199" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="24" value="52.298" />
                    <Key frame="49" value="50.628" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="24" value="76.2876" />
                    <Key frame="49" value="74.9692" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="24" value="0.2868" />
                    <Key frame="49" value="0.302" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="24" value="85.0816" />
                    <Key frame="49" value="86.0484" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="24" value="-11.6041" />
                    <Key frame="49" value="-10.2857" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="24" value="2.0191" />
                    <Key frame="49" value="4.83163" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Example Exercise" id="5" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="326" y="24">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Back and forth 1" id="3" localization="8" tooltip="" x="68" y="18">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="125">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="354" y="50">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="69" y="46">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Den Arm von Seite zur Seite hin und her bewegen.")]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <text>
                                      <![CDATA[Den Arm von Seite zur Seite hin und her bewegen.]]>
                                    </text>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="1.31597" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.67234" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-54.2268" />
                              <Key frame="75" value="-46.756" />
                              <Key frame="125" value="-48.6896" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.1713" />
                              <Key frame="75" value="-104.154" />
                              <Key frame="125" value="-64.0755" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.5164" />
                              <Key frame="75" value="0.5028" />
                              <Key frame="125" value="0.5028" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="82.7037" />
                              <Key frame="75" value="51.4143" />
                              <Key frame="125" value="48.2502" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="12.1267" />
                              <Key frame="75" value="55.0178" />
                              <Key frame="125" value="-17.2292" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.32078" />
                              <Key frame="75" value="-4.74855" />
                              <Key frame="125" value="-4.74855" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="52.298" />
                              <Key frame="75" value="51.5948" />
                              <Key frame="125" value="51.5948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="76.2876" />
                              <Key frame="75" value="76.9908" />
                              <Key frame="125" value="76.9908" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.2868" />
                              <Key frame="75" value="0.2764" />
                              <Key frame="125" value="0.2764" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.0816" />
                              <Key frame="75" value="85.521" />
                              <Key frame="125" value="85.521" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-11.6041" />
                              <Key frame="75" value="-10.9889" />
                              <Key frame="125" value="-10.9889" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="2.0191" />
                              <Key frame="75" value="2.72224" />
                              <Key frame="125" value="2.72224" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Back and forth 2" id="4" localization="8" tooltip="" x="336" y="21">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="125">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="354" y="50">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="69" y="46">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Den Arm von Seite zur Seite hin und her bewegen.")]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <text>
                                      <![CDATA[Den Arm von Seite zur Seite hin und her bewegen.]]>
                                    </text>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="1.31597" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.67234" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-54.2268" />
                              <Key frame="75" value="-46.756" />
                              <Key frame="125" value="-48.6896" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.1713" />
                              <Key frame="75" value="-104.154" />
                              <Key frame="125" value="-64.0755" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.5164" />
                              <Key frame="75" value="0.5028" />
                              <Key frame="125" value="0.5028" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="82.7037" />
                              <Key frame="75" value="51.4143" />
                              <Key frame="125" value="48.2502" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="12.1267" />
                              <Key frame="75" value="55.0178" />
                              <Key frame="125" value="-17.2292" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.32078" />
                              <Key frame="75" value="-4.74855" />
                              <Key frame="125" value="-4.74855" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="52.298" />
                              <Key frame="75" value="51.5948" />
                              <Key frame="125" value="51.5948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="76.2876" />
                              <Key frame="75" value="76.9908" />
                              <Key frame="125" value="76.9908" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.2868" />
                              <Key frame="75" value="0.2764" />
                              <Key frame="125" value="0.2764" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.0816" />
                              <Key frame="75" value="85.521" />
                              <Key frame="125" value="85.521" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-11.6041" />
                              <Key frame="75" value="-10.9889" />
                              <Key frame="125" value="-10.9889" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="2.0191" />
                              <Key frame="75" value="2.72224" />
                              <Key frame="125" value="2.72224" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Back and forth 3" id="5" localization="8" tooltip="" x="600" y="27">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="125">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="354" y="50">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="69" y="46">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Den Arm von Seite zur Seite hin und her bewegen.")]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <text>
                                      <![CDATA[Den Arm von Seite zur Seite hin und her bewegen.]]>
                                    </text>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="1.31597" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.67234" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-54.2268" />
                              <Key frame="75" value="-46.756" />
                              <Key frame="125" value="-48.6896" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.1713" />
                              <Key frame="75" value="-104.154" />
                              <Key frame="125" value="-64.0755" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.5164" />
                              <Key frame="75" value="0.5028" />
                              <Key frame="125" value="0.5028" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="82.7037" />
                              <Key frame="75" value="51.4143" />
                              <Key frame="125" value="48.2502" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="12.1267" />
                              <Key frame="75" value="55.0178" />
                              <Key frame="125" value="-17.2292" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.32078" />
                              <Key frame="75" value="-4.74855" />
                              <Key frame="125" value="-4.74855" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="52.298" />
                              <Key frame="75" value="51.5948" />
                              <Key frame="125" value="51.5948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="76.2876" />
                              <Key frame="75" value="76.9908" />
                              <Key frame="125" value="76.9908" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.2868" />
                              <Key frame="75" value="0.2764" />
                              <Key frame="125" value="0.2764" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.0816" />
                              <Key frame="75" value="85.521" />
                              <Key frame="125" value="85.521" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-11.6041" />
                              <Key frame="75" value="-10.9889" />
                              <Key frame="125" value="-10.9889" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="2.0191" />
                              <Key frame="75" value="2.72224" />
                              <Key frame="125" value="2.72224" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Horizontal eight" id="9" localization="8" tooltip="" x="465" y="24">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="270">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="353" y="46">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="68" y="42">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Jetzt eine liegende Acht.")]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <text>
                                      <![CDATA[Jetzt eine liegende Acht.]]>
                                    </text>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="30" value="1.31597" />
                              <Key frame="55" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="30" value="-1.67234" />
                              <Key frame="55" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="30" value="-54.2268" />
                              <Key frame="55" value="-57.8135" />
                              <Key frame="85" value="-57.8135" />
                              <Key frame="120" value="-57.8135" />
                              <Key frame="160" value="-57.8135" />
                              <Key frame="195" value="-57.8135" />
                              <Key frame="240" value="-57.8135" />
                              <Key frame="270" value="-57.8135" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="30" value="-77.1713" />
                              <Key frame="55" value="-79.5961" />
                              <Key frame="85" value="-79.5961" />
                              <Key frame="120" value="-79.5961" />
                              <Key frame="160" value="-79.5961" />
                              <Key frame="195" value="-79.5961" />
                              <Key frame="240" value="-79.5961" />
                              <Key frame="270" value="-79.5961" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="30" value="82.7037" />
                              <Key frame="55" value="49.1093" />
                              <Key frame="85" value="28.8497" />
                              <Key frame="120" value="54.09" />
                              <Key frame="160" value="69.4369" />
                              <Key frame="195" value="46.8514" />
                              <Key frame="240" value="24.7031" />
                              <Key frame="270" value="78.0381" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="30" value="12.1267" />
                              <Key frame="55" value="41.3358" />
                              <Key frame="85" value="21.9579" />
                              <Key frame="120" value="6.61886" />
                              <Key frame="160" value="2.39157" />
                              <Key frame="195" value="-12.8868" />
                              <Key frame="240" value="1.68642" />
                              <Key frame="270" value="11.6887" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="30" value="52.298" />
                              <Key frame="55" value="57.8135" />
                              <Key frame="85" value="57.8135" />
                              <Key frame="120" value="57.8135" />
                              <Key frame="160" value="57.8135" />
                              <Key frame="195" value="57.8135" />
                              <Key frame="240" value="57.8135" />
                              <Key frame="270" value="57.8135" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="30" value="76.2876" />
                              <Key frame="55" value="79.5961" />
                              <Key frame="85" value="79.5961" />
                              <Key frame="120" value="79.5961" />
                              <Key frame="160" value="79.5961" />
                              <Key frame="195" value="79.5961" />
                              <Key frame="240" value="79.5961" />
                              <Key frame="270" value="79.5961" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="30" value="85.0816" />
                              <Key frame="55" value="80.2575" />
                              <Key frame="85" value="80.2575" />
                              <Key frame="120" value="80.2575" />
                              <Key frame="160" value="80.2575" />
                              <Key frame="195" value="80.2575" />
                              <Key frame="240" value="80.2575" />
                              <Key frame="270" value="80.2575" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="30" value="-11.6041" />
                              <Key frame="55" value="-16.7161" />
                              <Key frame="85" value="-16.7161" />
                              <Key frame="120" value="-16.7161" />
                              <Key frame="160" value="-16.7161" />
                              <Key frame="195" value="-16.7161" />
                              <Key frame="240" value="-16.7161" />
                              <Key frame="270" value="-16.7161" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="30" value="0.5164" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="30" value="-1.32078" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="30" value="0.2868" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="30" value="2.0191" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Circle 1" id="10" localization="8" tooltip="" x="201" y="21">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="150">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="347" y="39">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="62" y="35">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Den Arm in einer Kreisform bewegen.")]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <text>
                                      <![CDATA[Den Arm in einer Kreisform bewegen.]]>
                                    </text>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="1.31597" />
                              <Key frame="40" value="-0.441859" />
                              <Key frame="150" value="1.31597" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.67234" />
                              <Key frame="40" value="-0.705531" />
                              <Key frame="150" value="-1.67234" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-54.2268" />
                              <Key frame="40" value="-52.6447" />
                              <Key frame="55" value="-55.1936" />
                              <Key frame="75" value="-32.5175" />
                              <Key frame="90" value="-34.8027" />
                              <Key frame="105" value="-33.5722" />
                              <Key frame="120" value="-30.0566" />
                              <Key frame="135" value="-25.5741" />
                              <Key frame="150" value="-54.2268" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.1713" />
                              <Key frame="40" value="-77.6108" />
                              <Key frame="55" value="-77.6108" />
                              <Key frame="75" value="-66.5365" />
                              <Key frame="90" value="-66.5365" />
                              <Key frame="105" value="-66.5365" />
                              <Key frame="120" value="-66.5365" />
                              <Key frame="135" value="-67.679" />
                              <Key frame="150" value="-77.1713" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.5164" />
                              <Key frame="40" value="0.5" />
                              <Key frame="55" value="0.5" />
                              <Key frame="75" value="0.5" />
                              <Key frame="90" value="0.5" />
                              <Key frame="105" value="0.5" />
                              <Key frame="120" value="0.5" />
                              <Key frame="135" value="0.4876" />
                              <Key frame="150" value="0.5164" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="82.7037" />
                              <Key frame="40" value="66.7074" />
                              <Key frame="55" value="38.2305" />
                              <Key frame="75" value="-24.7879" />
                              <Key frame="90" value="-24.4363" />
                              <Key frame="105" value="-11.1647" />
                              <Key frame="120" value="18.2791" />
                              <Key frame="135" value="49.3049" />
                              <Key frame="150" value="82.7037" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="12.1267" />
                              <Key frame="40" value="39.1094" />
                              <Key frame="55" value="66.0922" />
                              <Key frame="75" value="29.3534" />
                              <Key frame="90" value="-0.266077" />
                              <Key frame="105" value="-17.405" />
                              <Key frame="120" value="-18.6354" />
                              <Key frame="135" value="-11.3404" />
                              <Key frame="150" value="12.1267" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.32078" />
                              <Key frame="40" value="-3.34228" />
                              <Key frame="55" value="-3.34228" />
                              <Key frame="75" value="-5.53958" />
                              <Key frame="90" value="-8.96736" />
                              <Key frame="105" value="-10.9889" />
                              <Key frame="120" value="-10.9889" />
                              <Key frame="135" value="-9.6705" />
                              <Key frame="150" value="-1.32078" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="52.298" />
                              <Key frame="40" value="51.8585" />
                              <Key frame="55" value="51.8585" />
                              <Key frame="75" value="51.8585" />
                              <Key frame="90" value="51.8585" />
                              <Key frame="105" value="50.2765" />
                              <Key frame="120" value="50.2765" />
                              <Key frame="135" value="48.6065" />
                              <Key frame="150" value="52.298" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="76.2876" />
                              <Key frame="40" value="76.6392" />
                              <Key frame="55" value="76.6392" />
                              <Key frame="75" value="76.6392" />
                              <Key frame="90" value="76.6392" />
                              <Key frame="105" value="77.7818" />
                              <Key frame="120" value="77.7818" />
                              <Key frame="135" value="76.9029" />
                              <Key frame="150" value="76.2876" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.2868" />
                              <Key frame="40" value="0.2856" />
                              <Key frame="55" value="0.2856" />
                              <Key frame="75" value="0.2856" />
                              <Key frame="90" value="0.2856" />
                              <Key frame="105" value="0.2856" />
                              <Key frame="120" value="0.2856" />
                              <Key frame="135" value="0.302" />
                              <Key frame="150" value="0.2868" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.0816" />
                              <Key frame="40" value="85.3453" />
                              <Key frame="55" value="85.3453" />
                              <Key frame="75" value="85.3453" />
                              <Key frame="90" value="85.3453" />
                              <Key frame="105" value="86.1363" />
                              <Key frame="120" value="86.1363" />
                              <Key frame="135" value="87.7183" />
                              <Key frame="150" value="85.0816" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-11.6041" />
                              <Key frame="40" value="-11.0768" />
                              <Key frame="55" value="-11.0768" />
                              <Key frame="75" value="-11.0768" />
                              <Key frame="90" value="-11.0768" />
                              <Key frame="105" value="-10.0221" />
                              <Key frame="120" value="-10.0221" />
                              <Key frame="135" value="-9.31893" />
                              <Key frame="150" value="-11.6041" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="2.0191" />
                              <Key frame="40" value="3.77694" />
                              <Key frame="55" value="3.77694" />
                              <Key frame="75" value="3.77694" />
                              <Key frame="90" value="3.77694" />
                              <Key frame="105" value="3.77694" />
                              <Key frame="120" value="3.77694" />
                              <Key frame="135" value="6.4137" />
                              <Key frame="150" value="2.0191" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="10" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="10" indexofoutput="4" />
                      <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                      <Link inputowner="5" indexofinput="2" outputowner="9" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" />
            <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
            <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="4" />
            <Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="4" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
